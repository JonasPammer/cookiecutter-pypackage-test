---
name: Run Tox and Coverage

"on":
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/ci.yml"
      - "tests/**"
      - ".gitattributes"
      - ".yamllint"
      - "pyproject.toml"
      - "requirements-dev.txt"
      - "tox.ini"
      # as per .dockerignore:
      - "requirements.txt"
      - "setup.cfg"
      - "setup.py"
      - "LICENSE"
      - "test_application/**"
  schedule:
    # At 05:00 on Sunday.
    - cron: "0 5 * * 0"

permissions:
  contents: read

# Cancel running jobs when a pull request is updated
concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}"
  cancel-in-progress: true

jobs:
  ci:
    name: "${{ matrix.os }} / CPython ${{ matrix.python-version }} / ${{ matrix.pip-version }} pip"
    runs-on: "${{ matrix.os }}-latest"
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - macOS
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        pip-version:
          - "latest"
          - "previous"
        include:
          - os: Ubuntu
            python-version: 3.11-dev
            pip-version: latest
          - os: Ubuntu
            python-version: 3.7
            pip-version: main
    env:
      PY_COLORS: 1
      TOXENV: pip${{ matrix.pip-version }}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - name: check out the codebase
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: set up python ${{ matrix.python-version }} using github's action
        uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # tag=v4
        if: "!endsWith(matrix.python-version, '-dev')"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: set up python ${{ matrix.python-version }} using deadsnakes's action
        if: endsWith(matrix.python-version, '-dev')
        uses: deadsnakes/action@7ab8819e223c70d2bdedd692dfcea75824e0a617 # tag=v2.1.1
        with:
          python-version: "${{ matrix.python-version }}"

      - name: log python version info (${{ matrix.python-version }})
        run: python --version --version

      - name: get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: setup/activate pip cache
        uses: actions/cache@f4278025ab0f432ce369118909e46deec636f50c # tag=v3
        with:
          path: "${{ steps.pip-cache.outputs.dir }}"
          key: >-
            ${{ runner.os }}-pip-
            ${{ hashFiles('setup.*') }}-
            ${{ hashFiles('requirements*.txt') }}-
            ${{ hashFiles('tox.ini') }}-
            ${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt --require-hashes

      # tox automatically pip installs local directory
      - name: Run tox with '${{ env.TOXENV }}' environment
        run: tox

      - name: generate coverage xml
        run: .tox/pip${{ matrix.pip-version }}/${{ matrix.os == 'Windows' && 'Scripts' || 'bin' }}/coverage xml -o coverage.xml

      - name: Upload coverage to Codecov and add Pull Request comment
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # tag=v3
        with:
          file: ./coverage.xml
          name: "${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.pip-version }}"

  pypy:
    name: "${{ matrix.os }} / ${{ matrix.python-version }} / ${{ matrix.pip-version }} pip"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - MacOS
          - Windows
        python-version:
          - pypy-3.7
        pip-version:
          - latest
    env:
      PY_COLORS: 1
      TOXENV: pip${{ matrix.pip-version }}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - name: check out the codebase
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # tag=v4
        with:
          python-version: "${{ matrix.python-version }}"

      - name: install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt --require-hashes

      # tox automatically pip installs local directory
      - name: Run tox with '${{ env.TOXENV }}' environment
        run: tox
